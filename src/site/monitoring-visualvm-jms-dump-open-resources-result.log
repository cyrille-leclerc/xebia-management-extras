ActiveMQConnection {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1,clientId=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-3:1,started=true} - Creation context - Thread: 'Thread-3', date: '2011-07-27 15:53:41.463', stacktrace: 
 java.lang.Thread.getStackTrace(Thread.java:1503)
 fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
 fr.xebia.management.jms.leak.LeakDetectorConnection.<init>(LeakDetectorConnection.java:35)
 fr.xebia.management.jms.leak.LeakDetectorConnectionFactory.createConnection(LeakDetectorConnectionFactory.java:56)
 fr.xebia.management.jms.ManagedConnectionFactory.createConnection(ManagedConnectionFactory.java:243)
 org.springframework.jms.support.JmsAccessor.createConnection(JmsAccessor.java:184)
 org.springframework.jms.listener.AbstractJmsListeningContainer.createSharedConnection(AbstractJmsListeningContainer.java:403)
 org.springframework.jms.listener.AbstractJmsListeningContainer.establishSharedConnection(AbstractJmsListeningContainer.java:371)
 org.springframework.jms.listener.DefaultMessageListenerContainer.establishSharedConnection(DefaultMessageListenerContainer.java:749)
 org.springframework.jms.listener.AbstractJmsListeningContainer.doStart(AbstractJmsListeningContainer.java:278)
 org.springframework.jms.listener.AbstractJmsListeningContainer.start(AbstractJmsListeningContainer.java:263)
 org.springframework.jms.listener.DefaultMessageListenerContainer.start(DefaultMessageListenerContainer.java:555)
 org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:166)
 org.springframework.context.support.DefaultLifecycleProcessor.access$1(DefaultLifecycleProcessor.java:154)
 org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:335)
 org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:143)
 org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:108)
 org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:908)
 org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:428)
 org.springframework.web.context.ContextLoader.createWebApplicationContext(ContextLoader.java:276)
 org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:197)
 org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:47)
 org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4681)
 org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5184)
 org.apache.catalina.core.StandardContext$1.call(StandardContext.java:5179)
 java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
 java.util.concurrent.FutureTask.run(FutureTask.java:138)
 java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
 java.lang.Thread.run(Thread.java:680)
   ActiveMQSession {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:4,started=true} - Creation context - Thread: 'DefaultMessageListenerContainer-4', date: '2011-07-27 15:53:41.61', stacktrace: 
    java.lang.Thread.getStackTrace(Thread.java:1503)
    fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
    fr.xebia.management.jms.leak.LeakDetectorSession.<init>(LeakDetectorSession.java:37)
    fr.xebia.management.jms.leak.LeakDetectorConnection.createSession(LeakDetectorConnection.java:61)
    fr.xebia.jms.wrapper.ConnectionWrapper.createSession(ConnectionWrapper.java:56)
    fr.xebia.management.jms.ManagedConnection.createSession(ManagedConnection.java:52)
    org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    org.springframework.jms.listener.DefaultMessageListenerContainer.access$12(DefaultMessageListenerContainer.java:1)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1078)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    java.lang.Thread.run(Thread.java:680)
      ActiveMQMessageConsumer { value=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:4:1, started=true } - Creation context - Thread: 'DefaultMessageListenerContainer-4', date: '2011-07-27 15:53:41.903', stacktrace: 
       java.lang.Thread.getStackTrace(Thread.java:1503)
       fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
       fr.xebia.management.jms.leak.LeakDetectorMessageConsumer.<init>(LeakDetectorMessageConsumer.java:25)
       fr.xebia.management.jms.leak.LeakDetectorSession.createConsumer(LeakDetectorSession.java:81)
       fr.xebia.jms.wrapper.SessionWrapper.createConsumer(SessionWrapper.java:77)
       fr.xebia.management.jms.ManagedSession.createConsumer(ManagedSession.java:100)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:501)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:223)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1081)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
       java.lang.Thread.run(Thread.java:680)
   ActiveMQSession {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:1,started=true} - Creation context - Thread: 'DefaultMessageListenerContainer-5', date: '2011-07-27 15:53:41.611', stacktrace: 
    java.lang.Thread.getStackTrace(Thread.java:1503)
    fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
    fr.xebia.management.jms.leak.LeakDetectorSession.<init>(LeakDetectorSession.java:37)
    fr.xebia.management.jms.leak.LeakDetectorConnection.createSession(LeakDetectorConnection.java:61)
    fr.xebia.jms.wrapper.ConnectionWrapper.createSession(ConnectionWrapper.java:56)
    fr.xebia.management.jms.ManagedConnection.createSession(ManagedConnection.java:52)
    org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    org.springframework.jms.listener.DefaultMessageListenerContainer.access$12(DefaultMessageListenerContainer.java:1)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1078)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    java.lang.Thread.run(Thread.java:680)
      ActiveMQMessageConsumer { value=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:1:1, started=true } - Creation context - Thread: 'DefaultMessageListenerContainer-5', date: '2011-07-27 15:53:41.902', stacktrace: 
       java.lang.Thread.getStackTrace(Thread.java:1503)
       fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
       fr.xebia.management.jms.leak.LeakDetectorMessageConsumer.<init>(LeakDetectorMessageConsumer.java:25)
       fr.xebia.management.jms.leak.LeakDetectorSession.createConsumer(LeakDetectorSession.java:81)
       fr.xebia.jms.wrapper.SessionWrapper.createConsumer(SessionWrapper.java:77)
       fr.xebia.management.jms.ManagedSession.createConsumer(ManagedSession.java:100)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:501)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:223)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1081)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
       java.lang.Thread.run(Thread.java:680)
   ActiveMQSession {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:5,started=true} - Creation context - Thread: 'DefaultMessageListenerContainer-1', date: '2011-07-27 15:53:41.608', stacktrace: 
    java.lang.Thread.getStackTrace(Thread.java:1503)
    fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
    fr.xebia.management.jms.leak.LeakDetectorSession.<init>(LeakDetectorSession.java:37)
    fr.xebia.management.jms.leak.LeakDetectorConnection.createSession(LeakDetectorConnection.java:61)
    fr.xebia.jms.wrapper.ConnectionWrapper.createSession(ConnectionWrapper.java:56)
    fr.xebia.management.jms.ManagedConnection.createSession(ManagedConnection.java:52)
    org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    org.springframework.jms.listener.DefaultMessageListenerContainer.access$12(DefaultMessageListenerContainer.java:1)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1078)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    java.lang.Thread.run(Thread.java:680)
      ActiveMQMessageConsumer { value=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:5:1, started=true } - Creation context - Thread: 'DefaultMessageListenerContainer-1', date: '2011-07-27 15:53:41.896', stacktrace: 
       java.lang.Thread.getStackTrace(Thread.java:1503)
       fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
       fr.xebia.management.jms.leak.LeakDetectorMessageConsumer.<init>(LeakDetectorMessageConsumer.java:25)
       fr.xebia.management.jms.leak.LeakDetectorSession.createConsumer(LeakDetectorSession.java:81)
       fr.xebia.jms.wrapper.SessionWrapper.createConsumer(SessionWrapper.java:77)
       fr.xebia.management.jms.ManagedSession.createConsumer(ManagedSession.java:100)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:501)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:223)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1081)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
       java.lang.Thread.run(Thread.java:680)
   ActiveMQSession {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:3,started=true} - Creation context - Thread: 'DefaultMessageListenerContainer-3', date: '2011-07-27 15:53:41.61', stacktrace: 
    java.lang.Thread.getStackTrace(Thread.java:1503)
    fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
    fr.xebia.management.jms.leak.LeakDetectorSession.<init>(LeakDetectorSession.java:37)
    fr.xebia.management.jms.leak.LeakDetectorConnection.createSession(LeakDetectorConnection.java:61)
    fr.xebia.jms.wrapper.ConnectionWrapper.createSession(ConnectionWrapper.java:56)
    fr.xebia.management.jms.ManagedConnection.createSession(ManagedConnection.java:52)
    org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    org.springframework.jms.listener.DefaultMessageListenerContainer.access$12(DefaultMessageListenerContainer.java:1)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1078)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    java.lang.Thread.run(Thread.java:680)
      ActiveMQMessageConsumer { value=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:3:1, started=true } - Creation context - Thread: 'DefaultMessageListenerContainer-3', date: '2011-07-27 15:53:41.882', stacktrace: 
       java.lang.Thread.getStackTrace(Thread.java:1503)
       fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
       fr.xebia.management.jms.leak.LeakDetectorMessageConsumer.<init>(LeakDetectorMessageConsumer.java:25)
       fr.xebia.management.jms.leak.LeakDetectorSession.createConsumer(LeakDetectorSession.java:81)
       fr.xebia.jms.wrapper.SessionWrapper.createConsumer(SessionWrapper.java:77)
       fr.xebia.management.jms.ManagedSession.createConsumer(ManagedSession.java:100)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:501)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:223)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1081)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
       java.lang.Thread.run(Thread.java:680)
   ActiveMQSession {id=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:2,started=true} - Creation context - Thread: 'DefaultMessageListenerContainer-2', date: '2011-07-27 15:53:41.611', stacktrace: 
    java.lang.Thread.getStackTrace(Thread.java:1503)
    fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
    fr.xebia.management.jms.leak.LeakDetectorSession.<init>(LeakDetectorSession.java:37)
    fr.xebia.management.jms.leak.LeakDetectorConnection.createSession(LeakDetectorConnection.java:61)
    fr.xebia.jms.wrapper.ConnectionWrapper.createSession(ConnectionWrapper.java:56)
    fr.xebia.management.jms.ManagedConnection.createSession(ManagedConnection.java:52)
    org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
    org.springframework.jms.listener.DefaultMessageListenerContainer.access$12(DefaultMessageListenerContainer.java:1)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1078)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
    org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
    java.lang.Thread.run(Thread.java:680)
      ActiveMQMessageConsumer { value=ID:cyrille-le-clercs-macbook-pro.local-54241-1311774820968-2:1:2:1, started=true } - Creation context - Thread: 'DefaultMessageListenerContainer-2', date: '2011-07-27 15:53:41.876', stacktrace: 
       java.lang.Thread.getStackTrace(Thread.java:1503)
       fr.xebia.management.jms.leak.CreationContext.<init>(CreationContext.java:26)
       fr.xebia.management.jms.leak.LeakDetectorMessageConsumer.<init>(LeakDetectorMessageConsumer.java:25)
       fr.xebia.management.jms.leak.LeakDetectorSession.createConsumer(LeakDetectorSession.java:81)
       fr.xebia.jms.wrapper.SessionWrapper.createConsumer(SessionWrapper.java:77)
       fr.xebia.management.jms.ManagedSession.createConsumer(ManagedSession.java:100)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:501)
       org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:223)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:1081)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1057)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)
       org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)
       java.lang.Thread.run(Thread.java:680)
